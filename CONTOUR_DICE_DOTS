#4.Contours:
#a.Contouring shapes

def show_image_contour(image,contours):
    plt.figure()
    for n,contour in enumerate(contours):
        plt.plot(contour[:,1],contour[:,0],linewidth=3)
    plt.imshow(image,interpolation='nearest',cmap='gray_r')
    plt.title('Contours')
    plt.axis('off')
    
    from skimage import measure,data

#obtain the horse image
horse_image=data.horse()

#find the contours with a constant level value of0.8
contours=measure.find_contours(horse_image,level=0.8)

#shows the image with contours found
show_image_contour(horse_image,contours)

from skimage.io import imread
from skimage.filters import threshold_otsu

image_dices=imread('diceimg.png')

#make the image grayscale
image_dices=color.rgb2gray(image_dices)

#Obtain the optimal thresh value
thresh=threshold_otsu(image_dices)

#Apply threshholding
binary=image_dices > thresh

#Find contours at aconstant value of 0.8
contours=measure.find_contours(binary,level=0.8)

#Show the image
show_image_contour(image_dices, contours)

#Create list with the shape of each contour
shape_contours=[cnt.shape[0] for cnt in contours]

#Set 50 as the maximum sixe of the dots shape
max_dots_shape=50

#Count dots in contours excluding bigger then dots size
dots_contours=[cnt for cnt in contours if np.shape(cnt)[0]<max_dots_shape]

#Shows all contours found
show_image_contour(binary, contours)

#Print the dice's number
print('Dices dots number:{}.'.format(len(dots_contours)))
