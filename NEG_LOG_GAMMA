NEGATIVE:
import cv2
import matplotlib.pyplot as plt
img = cv2.imread('Land.jpg')
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
colored_negative = abs(255-img)

imgs = [img,colored_negative]

plt.subplot(2, 2, 1)
plt.title(title[0])
plt.imshow(imgs[0])
plt.xticks([])
plt.yticks([])

plt.subplot(2, 2, 2)
plt.title(title[1])
plt.imshow(imgs[1], cmap='gray')
plt.xticks([])
plt.yticks([])
plt.show()

LOG TRANSFORM:
import cv2
import numpy as np
import matplotlib.pyplot as plt

img = cv2.imread('Land.jpg')

c = 255 / np.log(1+ np.max(img))
log_img = c * (np.log(img+1))
log_img = np.array(log_img, dtype = np.uint8)
plt.imshow(img)
plt.show()
plt.imshow(log_img)
plt.show()

---------------------------------------------------------

%matplotlib inline
import imageio
import matplotlib.pyplot as plt
#import warnings
#import matplotlib.cbook
#warnings.filterwarnings("ignore", category=matplotlib.cbook.mplDeprecation)
pic=imageio.imread("violet.jpg")
plt.figure(figsize=(6,6))
plt.imshow(pic);
plt.axis('off');

negative = 255 - pic
plt.figure(figsize=(6,6))
plt.imshow(negative);
plt.axis('off');

%matplotlib inline
import cv2
import numpy as np
import matplotlib.pyplot as plt
pic=cv2.imread('violet.jpg')
gray=lambda rgb : np.dot(rgb[...,:3],[0.299,0.587,0.114])
gray=gray(pic)
max=np.max(gray)
def logtransform():
return(255/np.log(1+max))*np.log(1+gray)
plt.figure(figsize=(5,5))
plt.imshow(logtransform(), cmap=plt.get_cmap(name='gray'))
plt.axis('off');

import imageio
import matplotlib.pyplot as plt
pic=imageio.imread('violet.jpg')
gamma=2.2 # Gamma < 1 = Dark; Gamma > 1 = Bright
gamma_correction = ((pic/255)**(1/gamma))
plt.figure(figsize=(5,5))
plt.imshow(gamma_correction)
plt.axis('off');
